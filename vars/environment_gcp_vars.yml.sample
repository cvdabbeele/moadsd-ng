---
# #####################################################################
# Site Deploy Components
# #####################################################################
site_deploy_kubernetes: yes
site_deploy_openshift: no
site_deploy_deepsecurity: no
site_deploy_smartcheck: yes
site_deploy_jenkins: yes
site_deploy_gitlab: no
site_deploy_endpoints: no
site_deploy_linkerd: no
site_deploy_prometheus: yes
site_deploy_grafana: yes

kubernetes_worker_count: 3
linuxep_instance_count: 0
windowsep_instance_count: 1

# #####################################################################
# Google Cloud Settings
# E.g.
# gcp_project_id: moadsd-ng
# gcp_region: europe-west3
# gcp_zone: europe-west3-c
# #####################################################################
gcp_project_id: <project id>
gcp_auth_kind: serviceaccount
gcp_region: <region>
gcp_zone: <zone>
startup_script_linux: |
       #!/bin/sh
       useradd -m -s /bin/bash ansible
       mkdir -p /home/ansible/.ssh
       chmod 700 /home/ansible/.ssh
       chown ansible.ansible /home/ansible/.ssh
       echo {{ ansible_ssh_key }} >> /home/ansible/.ssh/authorized_keys
       chmod 600 /home/ansible/.ssh/authorized_keys
       chown ansible.ansible /home/ansible/.ssh/authorized_keys
       echo {{ ansible_ssh_key }} >> /home/ubuntu/.ssh/authorized_keys
       echo "ansible ALL=(ALL) NOPASSWD:ALL" >> /etc/sudoers.d/custom-users
       apt update
       apt install -y python3 python3-simplejson
startup_script_windows: |
       Invoke-Expression -Command ((New-Object System.Net.WebClient).DownloadString('https://raw.githubusercontent.com/ansible/ansible/devel/examples/scripts/ConfigureRemotingForAnsible.ps1')); Enable-WSManCredSSP -Role Server -Force
       $regitem = "HKLM:\SYSTEM\CurrentControlSet\Control\Network\NewNetworkWindowOff"
       New-Item -Path $regitem
scopes:
  - https://www.googleapis.com/auth/compute
moadsd_ng_prefix: moadsd-ng

# #####################################################################
# Linux Jumphost Settings
# #####################################################################
site_deploy_jumphost: yes
jumphost_instance_name: jumphost
jumphost_instance_count: 1
jumphost_size_gb: 32
jumphost_source_image: projects/ubuntu-os-cloud/global/images/family/ubuntu-1804-lts
jumphost_machine_type: n1-standard-1
jumphost_startup_script: "{{ startup_script_linux }}"
jumphost_tags: role-jumphost
jumphost_tld: nip.io

# #####################################################################
# Kubernetes Settings
# #####################################################################
# crio or docker
kubernetes_container_runtime: docker

# Cluster Networking Configration:
# pod_network_cidr: "10.244.0.0/16"   cluster_networking: flannel_flannel
# pod_network_cidr: "10.244.0.0/16"   cluster_networking: calico_flannel
# pod_network_cidr: "10.244.0.0/16"   cluster_networking: calico_calico
pod_network_cidr: "10.244.0.0/16"
cluster_networking: calico_calico

kubernetes_master_instance_name: k8smaster
kubernetes_master_size_gb: 32
kubernetes_master_source_image: projects/ubuntu-os-cloud/global/images/family/ubuntu-1804-lts
kubernetes_master_machine_type: n1-standard-4
kubernetes_master_startup_script: "{{ startup_script_linux }}"
kubernetes_master_tags: role-k8smaster

kubernetes_worker_instance_name: k8sworker
kubernetes_worker_size_gb: 32
kubernetes_worker_source_image: projects/ubuntu-os-cloud/global/images/family/ubuntu-1804-lts
kubernetes_worker_machine_type: n1-standard-4
kubernetes_worker_startup_script: "{{ startup_script_linux }}"
kubernetes_worker_tags: role-k8sworker

kubernetes_dashboard_nodeport: 30000
rook_ceph_dashboard_nodeport: 30001
linkerd_dashboard_nodeport: 30002

# #####################################################################
# Openshift Settings
# #####################################################################
openshift_instance_name: openshift
openshift_size_gb: 32
openshift_source_image: projects/ubuntu-os-cloud/global/images/family/ubuntu-1804-lts
openshift_machine_type: n1-standard-8
openshift_startup_script: "{{ startup_script_linux }}"
openshift_tags: role-openshift
openshift_dashboard: 6443

# #####################################################################
# Deep Security Settings
# #####################################################################
# dsaas or dsm
deepsecurity_variant: dsaas

postgresql_instance_name: postgresql
postgresql_size_gb: 16
postgresql_source_image: projects/ubuntu-os-cloud/global/images/family/ubuntu-1804-lts
postgresql_machine_type: n1-standard-2
postgresql_startup_script: "{{ startup_script_linux }}"
postgresql_tags: role-dsm-db

deepsecurity_instance_name: dsm
deepsecurity_size_gb: 32
deepsecurity_source_image: projects/rhel-cloud/global/images/family/rhel-7
deepsecurity_machine_type: n1-standard-4
deepsecurity_startup_script: "{{ startup_script_linux }}"
deepsecurity_tags: role-dsm

deepsecurity_database_name: dsmdb
deepsecurity_database_user: dsm
deepsecurity_database_role_attr_flags: LOGIN,CREATEDB,CREATEROLE
deepsecurity_database_priv: "CONNECT/ALL"

databasescreen_port: 5432
addressandportsscreen_managerport: 4119
addressandportsscreen_heartbeatport: 4120
addressandportsscreen_agentport: 4122

# #####################################################################
# Web Server for certificates
# #####################################################################
certserv_nodeport: 30012

# #####################################################################
# Deep Security Smart Check Settings
# #####################################################################
smartcheck_nodeport: 30010
smartcheck_registry: 30011

# #####################################################################
# Jenkins Settings
# #####################################################################
jenkins_nodeport: 30013

# #####################################################################
# Docker Registry Settings
# #####################################################################
registry_nodeport: 30017

# #####################################################################
# Grafana Settings
# #####################################################################
grafana_nodeport: 30018

# #####################################################################
# Prometheus Settings
# #####################################################################
prometheus_nodeport: 30019

# #####################################################################
# Custom Port for self-created services in K8s
# #####################################################################
custom_nodeport: 30100
custom_nodeport1: 30101
custom_nodeport2: 30102
custom_nodeport3: 30103

# #####################################################################
# Gitlab Settings
# #####################################################################
gitlab_nodeport_http: 30014
gitlab_nodeport_https: 30015
gitlab_nodeport_ssh: 30016

# #####################################################################
# Linux Endpoint Settings
# #####################################################################
linuxep_instance_name: linuxep
linuxep_size_gb: 32
linuxep_source_image: projects/rhel-cloud/global/images/family/rhel-7
linuxep_machine_type: n1-standard-1
linuxep_startup_script: "{{ startup_script_linux }}"
linuxep_tags: role-linuxep

# #####################################################################
# Windows Endpoint Settings
# #####################################################################
windowsep_instance_name: windowsep
windowsep_size_gb: 50
windowsep_source_image: projects/windows-cloud/global/images/family/windows-2012-r2
windowsep_machine_type: n1-standard-1
windowsep_startup_script: "{{ startup_script_windows }}"
windowsep_tags: role-windowsep
