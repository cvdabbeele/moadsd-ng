---
# #####################################################################
# Create a Linkerd instance
# #####################################################################
- name: Linkerd Download
  become: true
  become_user: ubuntu
  shell: curl -sL https://run.linkerd.io/install | sh
  args:
    chdir: /tmp
    warn: false

- name: Linkerd path
  become: true
  become_user: ubuntu
  lineinfile:
    path: /home/ubuntu/.bashrc
    insertafter: EOF
    line: 'PATH=$PATH:$HOME/.linkerd2/bin'

- name: Linkerd Deploy
  become: true
  become_user: ubuntu
  shell: $HOME/.linkerd2/bin/linkerd install --ignore-cluster | kubectl apply -f -
  args:
    chdir: $HOME

# FIXME
# --dry-run=true -o yaml | kubectl expose -f -
- name: Linkerd expose dashboard
  become: true
  become_user: ubuntu
  command: kubectl expose -n linkerd deployment linkerd-web --type=NodePort --name=linkerd-web-svc
  ignore_errors: yes

- name: Linkerd patch dashboard port
  become: true
  become_user: ubuntu
  command: kubectl patch service -n linkerd linkerd-web-svc --type='json' --patch='[{"op":"replace", "path":"/spec/ports/0/nodePort", "value":{{ linkerd_dashboard_nodeport }}}]'

- name: Generate DNS name
  set_fact:
    service_dns_name: "http://linkerd-{{ groups['moadsd_ng_jumphost_instance_public'][0] | regex_replace('\\.', '-') }}.{{ jumphost_tld }}"

- name: Create link document for Linkerd dashboard
  become: true
  become_user: ubuntu
  copy:
    dest: /home/ubuntu/linkerd.txt
    mode: 0640
    content: |
      URL: http://{{ inventory_hostname }}:{{ linkerd_dashboard_nodeport }}
      URL: {{ service_dns_name }}

- name: Fetch linkerd.txt
  become: true
  become_user: ubuntu
  fetch:
    src: /home/ubuntu/linkerd.txt
    dest: ./site_{{ type }}/
    flat: yes
