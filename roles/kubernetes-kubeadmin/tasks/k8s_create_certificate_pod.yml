---
# #####################################################################
# Create Certificate Server Pod
# #####################################################################

# Depending on the environment, inventory_hostname might be a dns name or an ip
# We now need effectively the ip on which ansible or we might reach the
# k8s master.
- name: Get ipaddr of k8smaster
  set_fact:
    remote_ip: "{{ inventory_hostname | ipaddr}}"

- name: Get ipaddr of k8smaster
  set_fact:
    remote_ip: "{{ hostvars[inventory_hostname]['ansible_default_ipv4']['address'] }}"
  when: not remote_ip

- name: Create Subdirectory moadsd-ng-certserv
  become: true
  become_user: ubuntu
  file:
    path: "/home/ubuntu/moadsd-ng-certserv"
    state: directory

- name: Copy Certificate to Build Context Certificate Server
  become: true
  copy:
    src: ./site_{{ type }}/{{ remote_ip }}.crt
    dest: /home/ubuntu/moadsd-ng-certserv/{{ remote_ip }}.crt
    owner: ubuntu
    group: docker

- name: Create Dockerfile for Certificate Server
  become: true
  become_user: ubuntu
  copy:
    dest: /home/ubuntu/moadsd-ng-certserv/Dockerfile
    mode: 0640
    content: |
      FROM nginx:alpine
      COPY {{ remote_ip }}.crt /usr/share/nginx/html/{{ remote_ip }}.crt

- name: Build Certificate Server Image
  become: true
  become_user: ubuntu
  shell: docker build -t moadsd-ng-certserv moadsd-ng-certserv/.
  args:
    chdir: $HOME

- name: Tag Certificate Server Image
  become: true
  become_user: ubuntu
  shell: docker tag moadsd-ng-certserv {{ remote_ip }}:{{ registry_nodeport }}/moadsd-ng-certserv:latest
  args:
    chdir: $HOME

- name: Login to cluster registry
  become: true
  become_user: ubuntu
  shell: docker login -u {{ cluster_registry_username }} -p {{ cluster_registry_password }} {{ remote_ip }}:{{ registry_nodeport }}
  args:
    chdir: $HOME
  register: login_result
  until: login_result.rc == 0
  retries: 60
  delay: 10
  ignore_errors: yes

- name: Push Certificate Server Image
  become: true
  become_user: ubuntu
  shell: docker push {{ remote_ip }}:{{ registry_nodeport }}/moadsd-ng-certserv:latest
  args:
    chdir: $HOME

- name: Create Image Pull Secret
  become: true
  become_user: ubuntu
  shell: kubectl create secret docker-registry cluster-registry --docker-server=https://{{ remote_ip }}:{{ registry_nodeport }}/v2/ --docker-username={{ cluster_registry_username }} --docker-password={{ cluster_registry_password }} --docker-email=k8s@moadsd-ng.io --dry-run=true -o yaml | kubectl apply -f -
  args:
    chdir: $HOME

- name: Create Deployment for Certificate Server
  become: true
  become_user: ubuntu
  copy:
    dest: /home/ubuntu/moadsd-ng-certserv.yml
    mode: 0640
    content: |
      apiVersion: v1
      kind: Service
      metadata:
        annotations:
          service.alpha.kubernetes.io/tolerate-unready-endpoints: "true"
        name: moadsd-ng-certserv
        labels:
          app: moadsd-ng-certserv
      spec:
        type: NodePort
        ports:
        - port: 80
          name: moadsd-ng-certserv
          targetPort: 80
          nodePort: {{ certserv_nodeport }}
        selector:
          app: moadsd-ng-certserv
      ---
      apiVersion: extensions/v1beta1
      kind: Deployment
      metadata:
        name: moadsd-ng-certserv
      spec:
        replicas: 1
        template:
          metadata:
            labels:
              app: moadsd-ng-certserv
          spec:
            containers:
            - name: moadsd-ng-certserv
              image: {{ remote_ip }}:{{ registry_nodeport }}/moadsd-ng-certserv:latest
              imagePullPolicy: Always
              ports:
              - containerPort: 80
            imagePullSecrets:
            - name: cluster-registry

- name: Create certificate pod deployment
  become: true
  become_user: ubuntu
  shell: kubectl apply -n default -f /home/ubuntu/moadsd-ng-certserv.yml --dry-run=true -o yaml | kubectl apply -f -
  args:
    chdir: $HOME
