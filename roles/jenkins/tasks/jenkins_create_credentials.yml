---
# #####################################################################
# Create Jenkins Credentials
# #####################################################################
- name: Create Docker Hub Credential
  shell: |
    export COOKIE_JAR=/tmp/cookies && \
    export JENKINS_CRUMB=$(curl --silent --cookie-jar $COOKIE_JAR http://{{ inventory_hostname }}:{{ jenkins_nodeport }}'/crumbIssuer/api/xml?xpath=concat(//crumbRequestField,":",//crumb)' \
      -u {{ jenkins_username }}:{{ jenkins_token }}) && \
    curl  --cookie $COOKIE_JAR http://{{ inventory_hostname }}:{{ jenkins_nodeport }}/credentials/store/system/domain/_/createCredentials \
      -H $JENKINS_CRUMB \
      -u {{ jenkins_username }}:{{ jenkins_token }} \
      --data-urlencode 'json={"": "0","credentials": {"scope": "GLOBAL","id": "docker-hub","username": "{{ dockerhub_username }}","password": "{{ dockerhub_password }}","description": "docker-hub","$class": "com.cloudbees.plugins.credentials.impl.UsernamePasswordCredentialsImpl"}}'

- name: Create Docker Hub Credential
  shell: |
    export COOKIE_JAR=/tmp/cookies && \
    export JENKINS_CRUMB=$(curl --silent --cookie-jar $COOKIE_JAR http://{{ inventory_hostname }}:{{ jenkins_nodeport }}'/crumbIssuer/api/xml?xpath=concat(//crumbRequestField,":",//crumb)' \
      -u {{ jenkins_username }}:{{ jenkins_token }}) && \
    curl  --cookie $COOKIE_JAR http://{{ inventory_hostname }}:{{ jenkins_nodeport }}/credentials/store/system/domain/_/createCredentials \
      -H $JENKINS_CRUMB \
      -u {{ jenkins_username }}:{{ jenkins_token }} \
      --data-urlencode 'json={"": "0","credentials": {"scope": "GLOBAL","id": "github-auth","username": "{{ github_username }}","password": "{{ github_password }}","description": "github-auth","$class": "com.cloudbees.plugins.credentials.impl.UsernamePasswordCredentialsImpl"}}'

- name: Create Smartcheck Credential
  shell: |
    export COOKIE_JAR=/tmp/cookies && \
    export JENKINS_CRUMB=$(curl --silent --cookie-jar $COOKIE_JAR http://{{ inventory_hostname }}:{{ jenkins_nodeport }}'/crumbIssuer/api/xml?xpath=concat(//crumbRequestField,":",//crumb)' \
      -u {{ jenkins_username }}:{{ jenkins_token }}) && \
    curl  --cookie $COOKIE_JAR http://{{ inventory_hostname }}:{{ jenkins_nodeport }}/credentials/store/system/domain/_/createCredentials \
      -H $JENKINS_CRUMB \
      -u {{ jenkins_username }}:{{ jenkins_token }} \
      --data-urlencode 'json={"": "0","credentials": {"scope": "GLOBAL","id": "smartcheck-auth","username": "{{ smartcheck_username }}","password": "{{ smartcheck_password }}","description": "smartcheck-auth","$class": "com.cloudbees.plugins.credentials.impl.UsernamePasswordCredentialsImpl"}}'

- name: Create Smartcheck Registry Credential
  shell: |
    export COOKIE_JAR=/tmp/cookies && \
    export JENKINS_CRUMB=$(curl --silent --cookie-jar $COOKIE_JAR http://{{ inventory_hostname }}:{{ jenkins_nodeport }}'/crumbIssuer/api/xml?xpath=concat(//crumbRequestField,":",//crumb)' \
      -u {{ jenkins_username }}:{{ jenkins_token }}) && \
    curl  --cookie $COOKIE_JAR http://{{ inventory_hostname }}:{{ jenkins_nodeport }}/credentials/store/system/domain/_/createCredentials \
      -H $JENKINS_CRUMB \
      -u {{ jenkins_username }}:{{ jenkins_token }} \
      --data-urlencode 'json={"": "0","credentials": {"scope": "GLOBAL","id": "preregistry-auth","username": "{{ smartcheck_registry_username }}","password": "{{ smartcheck_registry_password }}","description": "preregistry-auth","$class": "com.cloudbees.plugins.credentials.impl.UsernamePasswordCredentialsImpl"}}'

- name: Create Cluster Registry Credential
  shell: |
    export COOKIE_JAR=/tmp/cookies && \
    export JENKINS_CRUMB=$(curl --silent --cookie-jar $COOKIE_JAR http://{{ inventory_hostname }}:{{ jenkins_nodeport }}'/crumbIssuer/api/xml?xpath=concat(//crumbRequestField,":",//crumb)' \
      -u {{ jenkins_username }}:{{ jenkins_token }}) && \
    curl  --cookie $COOKIE_JAR http://{{ inventory_hostname }}:{{ jenkins_nodeport }}/credentials/store/system/domain/_/createCredentials \
      -H $JENKINS_CRUMB \
      -u {{ jenkins_username }}:{{ jenkins_token }} \
      --data-urlencode 'json={"": "0","credentials": {"scope": "GLOBAL","id": "registry-auth","username": "{{ cluster_registry_username }}","password": "{{ cluster_registry_password }}","description": "registry-auth","$class": "com.cloudbees.plugins.credentials.impl.UsernamePasswordCredentialsImpl"}}'

- name: Create GitHub Access Token Credential
  shell: |
    export COOKIE_JAR=/tmp/cookies && \
    export JENKINS_CRUMB=$(curl --silent --cookie-jar $COOKIE_JAR http://{{ inventory_hostname }}:{{ jenkins_nodeport }}'/crumbIssuer/api/xml?xpath=concat(//crumbRequestField,":",//crumb)' \
      -u {{ jenkins_username }}:{{ jenkins_token }}) && \
    curl  --cookie $COOKIE_JAR http://{{ inventory_hostname }}:{{ jenkins_nodeport }}/credentials/store/system/domain/_/createCredentials \
      -H $JENKINS_CRUMB \
      -u {{ jenkins_username }}:{{ jenkins_token }} \
      --data-urlencode 'json={"": "0","credentials": {"scope": "GLOBAL","id": "github-access-token","secret": "{{ jenkins_github_access_token }}","description": "github-access-token","$class": "org.jenkinsci.plugins.plaincredentials.impl.StringCredentialsImpl"}}'

# - name: Create Application Security Credential
#   shell: |
#     export COOKIE_JAR=/tmp/cookies && \
#     export JENKINS_CRUMB=$(curl --silent --cookie-jar $COOKIE_JAR http://{{ inventory_hostname }}:{{ jenkins_nodeport }}'/crumbIssuer/api/xml?xpath=concat(//crumbRequestField,":",//crumb)' \
#       -u {{ jenkins_username }}:{{ jenkins_token }}) && \
#     curl  --cookie $COOKIE_JAR http://{{ inventory_hostname }}:{{ jenkins_nodeport }}/credentials/store/system/domain/_/createCredentials \
#       -H $JENKINS_CRUMB \
#       -u {{ jenkins_username }}:{{ jenkins_token }} \
#       --data-urlencode 'json={"": "0","credentials": {"scope": "GLOBAL","id": "app-sec-group","username": "{{ application_security_key }}","password": "{{ application_security_secret }}","description": "app-sec-group","$class": "com.cloudbees.plugins.credentials.impl.UsernamePasswordCredentialsImpl"}}'

- name: Copy .kube/config to jenkins pod
  become: true
  become_user: ubuntu
  shell: kubectl cp .kube/config jenkins/$(kubectl -n jenkins get pod --no-headers -o custom-columns=":metadata.name" | grep jenkins):/config
  args:
    chdir: $HOME

- name: Create Kubeconfig Credential
  shell: |
    export COOKIE_JAR=/tmp/cookies && \
    export JENKINS_CRUMB=$(curl --silent --cookie-jar $COOKIE_JAR http://{{ inventory_hostname }}:{{ jenkins_nodeport }}'/crumbIssuer/api/xml?xpath=concat(//crumbRequestField,":",//crumb)' \
      -u {{ jenkins_username }}:{{ jenkins_token }}) && \
    curl  --cookie $COOKIE_JAR http://{{ inventory_hostname }}:{{ jenkins_nodeport }}/credentials/store/system/domain/_/createCredentials \
      -H $JENKINS_CRUMB \
      -u {{ jenkins_username }}:{{ jenkins_token }} \
      --data-urlencode 'json={"": "0","credentials": {"scope": "GLOBAL","id": "kubeconfig","kubeconfigSource": {"$class": "com.microsoft.jenkins.kubernetes.credentials.KubeconfigCredentials$FileOnMasterKubeconfigSource", "kubeconfigFile": "/config"},"description": "kubeconfig","$class": "com.microsoft.jenkins.kubernetes.credentials.KubeconfigCredentials"}}'
