---
# #####################################################################
# Create a Jenkins instance
# #####################################################################
- name: Create Jenkins overrides file
  copy:
    dest: /home/ubuntu/overrides-jenkins.yml
    mode: 0640
    owner: ubuntu
    content: |
      master:
        image: {{ jenkins_image }}
        tag: {{ jenkins_tag }}
        adminUser: {{ jenkins_username }}
        adminPassword: {{ jenkins_password }}
        resources:
          limits:
            cpu: {{ limits_cpu }}
            memory: {{ limits_memory }}
        serviceType: {{ service_type }}
        nodePort: {{ service_port }}
        installPlugins:
          - kubernetes
          - workflow-job
          - workflow-aggregator
          - credentials-binding
          - git
          - github-pullrequest
          - kubernetes-cd
          - blueocean
          - locale
          - python
          - deepsecurity-smartcheck
        scriptApproval:
          - "new groovy.json.JsonBuilder java.lang.Object"
          - "method groovy.lang.GroovyObject invokeMethod java.lang.String java.lang.Object"
          - "method hudson.plugins.git.GitSCM getUserRemoteConfigs"
          - "method hudson.plugins.git.UserRemoteConfig getUrl"
      agent:
        image: "joao29a/jnlp-slave-alpine-docker"
        tag: "latest"
        envVars:
          - name: DSSC_REGISTRY
            value: {{ inventory_hostname }}:{{ smartcheck_registry }}
          - name: DSSC_SERVICE
            value: {{ inventory_hostname }}:{{ smartcheck_nodeport }}
          - name: K8S_REGISTRY
            value: {{ inventory_hostname }}:{{ registry_nodeport }}
        resources:
          limits:
            cpu: {{ agent_limits_cpu }}
            memory: {{ agent_limits_memory }}
        volumes:
          - type: HostPath
            hostPath: /var/run/docker.sock
            mountPath: /var/run/docker.sock
      persistence:
        StorageClass: {{ persistence_storageClassName }}
        size: {{ persistence_size }}
      rbac:
        create: {{ rbac_create }}

- name: Create Jenkins Namespace
  become: true
  become_user: ubuntu
  shell: kubectl create namespace {{ jenkins_namespace }} --dry-run=true -o yaml | kubectl apply -f -
  args:
    chdir: $HOME

- name: Install Jenkins
  become: true
  become_user: ubuntu
  shell: helm install --namespace {{ jenkins_namespace }} --values overrides-jenkins.yml {{ jenkins_name }} {{ jenkins_chart }} --version {{ jenkins_chart_version }} >> jenkins.log
  args:
    chdir: $HOME
    creates: jenkins.log

- name: Fetch jenkins.log
  become: true
  become_user: ubuntu
  fetch:
    src: /home/ubuntu/jenkins.log
    dest: ./site_{{ type }}/
    flat: yes

- name: Store Jenkins credentials
  become: true
  become_user: ubuntu
  shell: |
    echo URL: http://{{ inventory_hostname }}:{{ jenkins_nodeport }} > jenkins.txt
    echo Username: {{ jenkins_username }} >> jenkins.txt
    echo Password: {{ jenkins_password }} >> jenkins.txt
  args:
    chdir: $HOME
    creates: jenkins.txt

- name: Fetch jenkins.txt
  become: true
  become_user: ubuntu
  fetch:
    src: /home/ubuntu/jenkins.txt
    dest: ./site_{{ type }}/
    flat: yes
