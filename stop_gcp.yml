---
# #####################################################################
# Create MOADSD-NG Environment in GCP
# #####################################################################
- name: Check if Google cloud SDK is installed
  command: gcloud version
  register: gcloud_installed
  changed_when: false
  ignore_errors: yes

- fail:
    msg: "Please make sure Google Cloud SDK is installed before executing the role."
  when: gcloud_installed is failed

- name: Terminate instance of Kubernetes master
  include_role:
    name: environment-gcp
  vars:
    operation: terminate_instance
    instance_name: "{{ kubernetes_master_instance_name }}"
    # register: terminate_instance_kubernetes_master
    # async: 7200
    # poll: 0

- name: Terminate instance of Kubernetes worker
  include_role:
    name: environment-gcp
  vars:
    operation: terminate_instance
    instance_name: "{{ kubernetes_worker_instance_name }}{{ item }}"
    # register: terminate_instance_kubernetes_worker
    # async: 7200
    # poll: 0
  with_sequence: count="{{ kubernetes_worker_count }}"

- name: Terminate instance of Openshift
  include_role:
    name: environment-gcp
  vars:
    operation: terminate_instance
    instance_name: "{{ openshift_instance_name }}"
    # register: terminate_instance_kubernetes_master
    # async: 7200
    # poll: 0

# - name: Wait for instance termination to complete
#   async_status: jid={{ item.ansible_job_id }}
#   register: ec2_jobs
#   until: ec2_jobs.finished
#   retries: 300
#   with_items: terminate_instance_kubernetes_worker.results

- name: Terminate instance of PostgreSQL
  include_role:
    name: environment-gcp
  vars:
    operation: terminate_instance
    instance_name: "{{ postgresql_instance_name }}"

- name: Terminate instance of Deep Security Manager
  include_role:
    name: environment-gcp
  vars:
    operation: terminate_instance
    instance_name: "{{ deepsecurity_instance_name }}"

- name: Terminate linux endpoint instances
  include_role:
    name: environment-gcp
  vars:
    operation: terminate_instance
    instance_name: "{{ linuxep_instance_name }}{{ item }}"
  with_sequence: count="{{ linuxep_instance_count }}"

- name: Terminate windows endpoint instances
  include_role:
    name: environment-gcp
  vars:
    operation: terminate_instance
    instance_name: "{{ windowsep_instance_name }}{{ item }}"
  with_sequence: count="{{ windowsep_instance_count }}"

- name: Terminate jumphost
  include_role:
    name: environment-gcp
  vars:
    operation: terminate_instance
    instance_name: "{{ jumphost_instance_name }}"
  when: terminate_jumphost == True

- name: Check if nat config still exists
  delegate_to: 127.0.0.1
  command: gcloud compute routers nats describe nat-config --router={{ moadsd_ng_prefix }}-router --region {{ gcp_region }}
  register: gcloud_nat_config_installed
  changed_when: false
  ignore_errors: yes

- name: Delete nat config
  delegate_to: 127.0.0.1
  command: gcloud compute routers nats delete nat-config --router={{ moadsd_ng_prefix }}-router --region {{ gcp_region }}
  when: gcloud_nat_config_installed is not failed

- name: Check if router still exists
  delegate_to: 127.0.0.1
  command: gcloud compute routers describe {{ moadsd_ng_prefix }}-router --region {{ gcp_region }}
  register: gcloud_router_installed
  changed_when: false
  ignore_errors: yes

- name: Delete router
  delegate_to: 127.0.0.1
  command: gcloud compute routers delete {{ moadsd_ng_prefix }}-router --region {{ gcp_region }}
  when: gcloud_router_installed is not failed

- name: Terminate GCP network
  include_role:
    name: environment-gcp
  vars:
    operation: terminate_network
