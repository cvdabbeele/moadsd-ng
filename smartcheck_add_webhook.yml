---
# #####################################################################
# Query some private ips
# #####################################################################
- hosts: tag_role_jumphost
  tasks:
    - name: Get ipaddr of Jumphost
      set_fact:
        remote_ip: "{{ inventory_hostname | ipaddr}}"

    - name: Get ipaddr of Jumphost
      set_fact:
        remote_ip: "{{ hostvars[inventory_hostname]['ansible_default_ipv4']['address'] }}"
      when: not remote_ip

    - name: Store external ip address of Jumphost
      add_host:
        name: "{{ remote_ip }}"
        groups: "moadsd_ng_jumphost_instance_public"

    - name: Store all Groups in Memory
      set_fact:
        moadsd_ng_groups: "{{ hostvars[inventory_hostname]['groups'] }}"

- hosts: localhost
  gather_facts: no
  tasks:
    - name: Include vars
      include: site_vars.yml

    - name: Listing Jumphost Environment
      debug:
        msg:
          - "Jumphost                     : {{ hostvars[inventory_hostname]['groups']['tag_role_jumphost'][0] }}"
      when: site_deploy_jumphost == True

    - name: Listing Kubernetes Environment
      debug:
        msg:
          - "Kubernetes Master            : {{ hostvars[inventory_hostname]['groups']['tag_role_k8smaster'][0] }}"
          - "Kubernetes Worker 1          : {{ hostvars[inventory_hostname]['groups']['tag_role_k8sworker'][0] }}"
      when: "'tag_role_k8smaster' is in groups"

    - name: Listing OpenShift Environment
      debug:
        msg:
          - "OpenShift Master             : {{ hostvars[inventory_hostname]['groups']['tag_role_openshift'][0] }}"
      when: "'tag_role_openshift' is in groups"

    - name: Listing Deep Security Environment
      debug:
        msg:
          - "Deep Security                : {{ hostvars[inventory_hostname]['groups']['tag_role_dsm'][0] }}"
          - "PostgreSQL                   : {{ hostvars[inventory_hostname]['groups']['tag_role_dsmdb'][0] }}"
      when: "'tag_role_dsm' is in groups"

# #####################################################################
# Deploy Webhook
# #####################################################################
- hosts: tag_role_k8smaster
  vars:
  tasks:
    - name: Include vars
      include: site_vars.yml

    - name: Authenticate to Smart Check
      uri:
        url: https://{{ ansible_hostname }}:{{ smartcheck_nodeport }}/api/sessions
        method: POST
        validate_certs: no
        body_format: json
        body: |
          {
            "user": {
              "userid": "{{ smartcheck_username }}",
              "password": "{{ smartcheck_password }}"
            }
          }
        status_code: 201
      register: login

    - name: Create Webhook to k8smaster:8000
      uri:
        url: https://{{ ansible_hostname }}:{{ smartcheck_nodeport }}/api/webhooks
        method: POST
        validate_certs: no
        headers:
          Authorization: "Bearer {{ login.json.token }}"
        body_format: json
        body: |
          {
            "name": "Scan Status Webhook",
            "hookUrl": "https://10.0.2.77:8000",
            "secret": "secret",
            "insecureSkipVerify": true,
            "active": true,
            "events": [
              "*"
            ]
          }
        status_code: 201
