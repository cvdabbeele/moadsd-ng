---
# #####################################################################
# Deploy Endpoints / Servers
# #####################################################################

# #####################################################################
# Query some private ips
# #####################################################################
- hosts: tag_role_jumphost:&tag_user_{{ user }}
  tasks:
    - name: Get ipaddr of Jumphost
      set_fact:
        remote_ip: "{{ inventory_hostname | ipaddr}}"

    - name: Get ipaddr of Jumphost
      set_fact:
        remote_ip: "{{ hostvars[inventory_hostname]['ansible_default_ipv4']['address'] }}"
      when: not remote_ip

    - name: Store external ip address of Jumphost
      add_host:
        name: "{{ remote_ip }}"
        groups: "moadsd_ng_jumphost_instance_public"

- hosts: localhost
  gather_facts: false
  tasks:
    - name: Include vars
      include: site_vars.yml
    
    - name: Listing Jumphost Environment
      debug:
        msg:
          - "Jumphost                     : {{ jumphost_ip }}"
      when: site_deploy_jumphost == True

    - name: Listing Kubernetes Environment
      debug:
        msg:
          - "Kubernetes Master            : {{ k8smaster_ip }}"
          - "Kubernetes Worker 1          : {{ k8sworker1_ip }}"
      when: site_deploy_kubernetes == True

    - name: Listing OpenShift Environment
      debug:
        msg:
          - "OpenShift Master             : {{ openshift_ip }}"
      when: site_deploy_openshift == True

    - name: Listing Deep Security Environment
      debug:
        msg:
          - "Deep Security                : {{ dsm_ip }}"
          - "PostgreSQL                   : {{ dsmdb_ip }}"
      when:
        - site_deploy_deepsecurity == True
        - deepsecurity_variant == 'dsm'

# #####################################################################
# Deploy Endpoints / Servers
# #####################################################################
- name: Deploy Endpoints
  hosts: tag_role_linuxep:tag_role_windowsep:&tag_user_{{ user }}

  tasks:
    - name: Include vars
      include: site_vars.yml

    - name: Deploy DSA with DSaaS
      include_role:
        name: deepsecurity-agent
      vars:
        operation: deploy
        tenant_id: "{{ deepsecurity_tenant_id }}"
        tenant_password: "{{ deepsecurity_administrator_password }}"
        token: "{{ deepsecurity_token }}"
        force_reactivation: False
      when:
        # - site_deploy_endpoints == True
        - deepsecurity_variant == 'dsaas'

    - name: Deploy DSA with DSM on MOADSD-NG
      include_role:
        name: deepsecurity-agent
      vars:
        operation: deploy
        dsm_agent_download_hostname: "{{ dsm_ip }}"
        dsm_agent_download_port: 4119
        dsm_agent_activation_hostname: "{{ dsm_ip }}"
        dsm_agent_activation_port: 4120
        force_reactivation: False
      when:
        # - site_deploy_endpoints == True
        - deepsecurity_variant == 'dsm'

- name: Set Linux Server policy
  hosts: tag_role_linuxep:&tag_user_{{ user }}
  tasks:
    - name: Set Policy
      include_role:
        name: deepsecurity-agent
      vars:
        operation: set-policy-by-name
        policy_name: Linux Server

- name: Set Windows Server policy
  hosts: tag_role_windowsep:&tag_user_{{ user }}
  tasks:
    - name: Set Policy
      include_role:
        name: deepsecurity-agent
      vars:
        operation: set-policy-by-name
        policy_name: Windows Server

- name: Update Configuration
  hosts: tag_role_linuxep:&tag_user_{{ user }}, tag_role_windowsep:&tag_user_{{ user }}
  tasks:
    - name: Update Configuration
      include_role:
        name: deepsecurity-agent
      vars:
        operation: update-configuration
    - name: Initiate Recommendation Scan
      include_role:
        name: deepsecurity-agent
      vars:
        operation: run-recommendation-scans

- name: Prepare Facter for Deep Security
  hosts: tag_role_linuxep:&tag_user_{{ user }}
  become: yes
  tasks:
    - name: Update APT cache
      yum:
        update_cache: yes
    - name: Install the latest version of "facter"
      yum:
        name: facter
        state: present
    - name: "Create custom fact directory"
      file:
        path: "/etc/ansible/facts.d"
        state: "directory"
    - name: "Insert custom fact file"
      copy:
        src: ./files/dsa_status.fact
        dest: /etc/ansible/facts.d/dsa_status.fact
        mode: 0755
