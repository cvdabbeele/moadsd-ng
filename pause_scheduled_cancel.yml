---
# #####################################################################
# Cancel Scheduled Pause
# #####################################################################
- hosts: tag_role_jumphost:&tag_user_{{ user }}
  gather_facts: false
  tasks:
    - debug:
        msg:
          - "# #####################################################################"
          - "# Only Implemented for Linux Instances on AWS yet"
          - "# #####################################################################"

    - name: Get ipaddr of jumphost
      set_fact:
        remote_ip: "{{ inventory_hostname | ipaddr}}"

    - name: Get ipaddr of jumphost
      set_fact:
        remote_ip: "{{ hostvars[inventory_hostname]['ansible_default_ipv4']['address'] }}"
      when: not remote_ip

    - name: Store external ip address of jumphost
      add_host:
        name: "{{ remote_ip }}"
        groups: "moadsd_ng_jumphost_instance_public"

- hosts: tag_role_jumphost:tag_role_k8smaster:tag_role_k8sworker:tag_role_linuxep:&tag_user_{{ user }}
  gather_facts: false
  become: yes
  vars:
    shutdown_delay: 2

  tasks:
    - name: Include vars
      include: site_vars.yml

    - name: AWS
      block:
        - name: Query Instance State
          set_fact:
            ec2_state: "{{ hostvars[inventory_hostname]['ec2_state'] }}"

        - name: Cancel Shutdown on Linux Instance
          at:
            command: shutdown -h now
            state: absent
          when:
            - ec2_state == "running"
      when: type == "aws"

    - name: GCP
      block:
        - name: Query Instance State
          set_fact:
            gcp_state: "{{ hostvars[inventory_hostname]['status'] }}"

        - name: Send Shutdown Command to Linux Instance
          at:
            command: shutdown -h now
            state: absent
          when:
            - gcp_state == "RUNNING"
      when: type == "gcp"
