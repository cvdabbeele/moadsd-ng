---
# #####################################################################
# Create MOADSD-NG Environment in Azure
# #####################################################################
# - name: Check if Google cloud SDK is installed
#   command: gcloud version
#   register: gcloud_installed
#   changed_when: false
#   ignore_errors: yes
#
# - fail:
#     msg: "Please make sure Google Cloud SDK is installed before executing the role."
#   when: gcloud_installed is failed

- name: Include site credentials
  include_vars: vars/site_secrets.yml

- name: Include vars for AZURE
  include_vars: "{{ item }}"
  with_items:
    - vars/environment_azure_secrets.yml
    - vars/environment_azure_vars.yml
  when: type == 'azure'

- name: Report
  uri:
    url: "{{ report_url }}"
    method: POST
    headers:
      x-api-key: "{{ report_key | b64decode }}"
    validate_certs: yes
    body_format: json
    body: |
      {
          "TableName": "moadsd-ng-reporter",
      	  "Item": {
      	    "datetime": {"S": "{{ lookup('pipe','date +%Y-%m-%d-%H-%M-%S') }}" },
      	    "admin_email": {"S": "{{ admin_email | hash('sha256') }}" },
      	    "type": {"S": "{{ type }}" },
      	    "action": {"S": "{{ run_pb }}" },
      	    "site_deploy_kubernetes": {"S": "{{ site_deploy_kubernetes }}" },
      	    "site_deploy_openshift": {"S": "{{ site_deploy_openshift }}" },
      	    "site_deploy_deepsecurity": {"S": "{{ site_deploy_deepsecurity }}" },
      	    "site_deploy_smartcheck": {"S": "{{ site_deploy_smartcheck }}" },
      	    "site_deploy_jenkins": {"S": "{{ site_deploy_jenkins }}" },
      	    "site_deploy_gitlab": {"S": "{{ site_deploy_gitlab }}" },
      	    "site_deploy_endpoints": {"S": "{{ site_deploy_endpoints }}" },
      	    "site_deploy_linkerd": {"S": "{{ site_deploy_linkerd }}" },
      	    "site_deploy_prometheus": {"S": "{{ site_deploy_prometheus }}" },
      	    "site_deploy_grafana": {"S": "{{ site_deploy_grafana }}" },
      	    "site_deploy_opa": {"S": "{{ site_deploy_opa }}" },
      	    "site_deploy_jumphost": {"S": "{{ site_deploy_jumphost }}" }
      	}
      }
    status_code: 200
  delegate_to: localhost

- name: Create Azure network
  include_role:
    name: environment-azure
  vars:
    operation: create_network

- name: Create instance for PostgreSQL
  include_role:
    name: environment-azure
  vars:
    operation: create_linux_instance
    instance_name: "{{ postgresql_instance_name }}"
    instance_source_image: "{{ postgresql_source_image }}"
    instance_size_gb: "{{ postgresql_size_gb }}"
    instance_machine_type: "{{ postgresql_machine_type }}"
    instance_startup_script: "{{ postgresql_startup_script }}"
    instance_tags: "{{ postgresql_tags }}"
    instance_ports_anywhere:
      - '22'
    instance_ports_network:
      - "{{ databasescreen_port |string }}"
  when: site_deploy_deepsecurity == True

- name: Create instance for Deep Security Manager
  include_role:
    name: environment-azure
  vars:
    operation: create_linux_instance
    instance_name: "{{ deepsecurity_instance_name }}"
    instance_source_image: "{{ deepsecurity_source_image }}"
    instance_size_gb: "{{ deepsecurity_size_gb }}"
    instance_machine_type: "{{ deepsecurity_machine_type }}"
    instance_startup_script: "{{ deepsecurity_startup_script }}"
    instance_tags: "{{ deepsecurity_tags }}"
    instance_ports_anywhere:
      - '22'
      - "{{ addressandportsscreen_managerport |string }}"
      - "{{ addressandportsscreen_heartbeatport |string }}"
    instance_ports_network:
      - ''
  when: site_deploy_deepsecurity == True

- name: Create instance for Kubernetes master
  include_role:
    name: environment-azure
  vars:
    operation: create_linux_instance
    instance_name: "{{ kubernetes_master_instance_name }}"
    instance_source_image: "{{ kubernetes_master_source_image }}"
    instance_size_gb: "{{ kubernetes_master_size_gb }}"
    instance_machine_type: "{{ kubernetes_master_machine_type }}"
    instance_startup_script: "{{ kubernetes_master_startup_script }}"
    instance_tags: "{{ kubernetes_master_tags }}"
    instance_ports_anywhere:
      - '22'
      - '80'
      - '443'
      - "{{ kubernetes_dashboard_nodeport |string }}"
      - "{{ rook_ceph_dashboard_nodeport |string }}"
      - "{{ smartcheck_nodeport |string }}"
      - "{{ smartcheck_registry |string }}"
      - "{{ certserv_nodeport |string }}"
      - "{{ jenkins_nodeport |string }}"
      - "{{ gitlab_nodeport_http |string }}"
      - "{{ gitlab_nodeport_https |string }}"
      - "{{ gitlab_nodeport_ssh |string }}"
      - "{{ linkerd_dashboard_nodeport | string }}"
      - "{{ registry_nodeport | string }}"
      - "{{ custom_nodeport | string }}"
    instance_ports_network:
      - '1-65535'
      # - '6443'
      # - '2379-2380'
      # - '10250'
      # - '10251'
      # - '10252'
      # - '10255'
  when: site_deploy_kubernetes == True

- name: Create instance for Kubernetes worker
  include_role:
    name: environment-azure
  vars:
    operation: create_linux_instance
    instance_name: "{{ kubernetes_worker_instance_name }}{{ item }}"
    instance_source_image: "{{ kubernetes_worker_source_image }}"
    instance_size_gb: "{{ kubernetes_worker_size_gb }}"
    instance_machine_type: "{{ kubernetes_worker_machine_type }}"
    instance_startup_script: "{{ kubernetes_worker_startup_script }}"
    instance_tags: "{{ kubernetes_worker_tags }}"
    instance_ports_anywhere:
      - '22'
    instance_ports_network:
      - '1-65535'
      # - '10250'
      # - '10255'
      # - '30000-32767''
  with_sequence: count="{{ kubernetes_worker_count }}"
  when: site_deploy_kubernetes == True

# - name: Create instance for GitLab
#   include_role:
#     name: environment-azure
#   vars:
#     operation: create_linux_instance
#     instance_name: "{{ gitlab_instance_name }}"
#     instance_source_image: "{{ gitlab_source_image }}"
#     instance_size_gb: "{{ gitlab_size_gb }}"
#     instance_machine_type: "{{ gitlab_machine_type }}"
#     instance_startup_script: "{{ gitlab_startup_script }}"
#     instance_tags: "{{ gitlab_tags }}"
#     instance_ports_anywhere:
#       - '22'
#       - '80'
#       - '443'
#       - '8443'
#       - '10022'
#       # - "{{ kubernetes_dashboard_nodeport |string }}"
#       # - "{{ rook_ceph_dashboard_nodeport |string }}"
#       # - "{{ smartcheck_nodeport |string }}"
#       # - "{{ jenkins_nodeport |string }}"
#       # - "{{ gitlab_nodeport |string }}"
#     instance_ports_network:
#       - '1-65535'
#       # - '10250'
#       # - '10255'
#       # - '30000-32767''
#   when: site_deploy_gitlab == True
