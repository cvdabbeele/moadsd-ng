- hosts: tag_role_jumphost
  gather_facts: false
  tasks:
    - name: Get ipaddr of jumphost
      set_fact:
        remote_ip: "{{ inventory_hostname | ipaddr}}"

    - name: Get ipaddr of jumphost
      set_fact:
        remote_ip: "{{ hostvars[inventory_hostname]['ansible_default_ipv4']['address'] }}"
      when: not remote_ip

    - name: Store external ip address of jumphost
      add_host:
        name: "{{ remote_ip }}"
        groups: "moadsd_ng_jumphost_instance_public"

- hosts: tag_project_moadsd_ng
  gather_facts: false
  vars:
  tasks:
    - name: Include vars
      include: site_vars.yml

    - name: Start instance
      include_role:
        name: environment-gcp
      vars:
        operation: start_instance
        instance_name: "{{ hostvars[inventory_hostname]['name'] }}"
      when: type == 'gcp'

    - name: Start instance
      include_role:
        name: environment-aws
      vars:
        operation: start_instance
        instance_id: "{{ hostvars[inventory_hostname]['ec2_id'] }}"
      when: type == 'aws'

    - name: Start instance
      debug:
        msg: "not yet implemented"
      # include_role:
      #   name: environment-azure
      # vars:
      #   operation: stop_instance
      when: type == 'azure'

- hosts: localhost
  gather_facts: false
  tasks:
    - name: Create Jumphost SSH Command
      delegate_to: 127.0.0.1
      copy:
        dest: "./ssh_jumphost"
        content: |
          ssh ubuntu@{{ hostvars[inventory_hostname]['groups']['tag_role_jumphost'][0] }}
        force: yes
        owner: ansible
        mode: '0700'

    - name: Create Master SSH Command
      delegate_to: 127.0.0.1
      copy:
        dest: "./ssh_master"
        content: |
          ssh -o ProxyCommand="ssh -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -W %h:%p {{ hostvars[inventory_hostname]['groups']['tag_role_jumphost'][0] }}" ubuntu@{{ hostvars[inventory_hostname]['groups']['tag_role_k8smaster'][0] }} $1
        force: yes
        owner: ansible
        mode: '0700'

    - name: Create Master Watch Pods Command
      delegate_to: 127.0.0.1
      copy:
        dest: "./ssh_master_pods"
        content: |
          watch './ssh_master "kubectl get pods --all-namespaces"'
        force: yes
        owner: ansible
        mode: '0700'

    - name: Create Master Watch Services Command
      delegate_to: 127.0.0.1
      copy:
        dest: "./ssh_master_services"
        content: |
          watch './ssh_master "kubectl get services --all-namespaces"'
        force: yes
        owner: ansible
        mode: '0700'

    - name: Create Master Watch Deployments Command
      delegate_to: 127.0.0.1
      copy:
        dest: "./ssh_master_deployments"
        content: |
          watch './ssh_master "kubectl get deployments --all-namespaces"'
        force: yes
        owner: ansible
        mode: '0700'
