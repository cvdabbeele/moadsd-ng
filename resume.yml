- hosts: tag_role_jumphost
  gather_facts: false
  tasks:
    - name: Get ipaddr of jumphost
      set_fact:
        remote_ip: "{{ inventory_hostname | ipaddr}}"

    - name: Get ipaddr of jumphost
      set_fact:
        remote_ip: "{{ hostvars[inventory_hostname]['ansible_default_ipv4']['address'] }}"
      when: not remote_ip

    - name: Store external ip address of jumphost
      add_host:
        name: "{{ remote_ip }}"
        groups: "moadsd_ng_jumphost_instance_public"

- hosts: tag_role_jumphost, tag_role_k8smaster
  gather_facts: false
  vars:
  tasks:
    - name: Include vars
      include: site_vars.yml

    - name: Start instance
      include_role:
        name: environment-gcp
      vars:
        operation: start_instance
        instance_name: "{{ hostvars[inventory_hostname]['name'] }}"
      when: type == 'gcp'

    - name: Start instance
      include_role:
        name: environment-aws
      vars:
        operation: start_instance
        instance_id: "{{ hostvars[inventory_hostname]['ec2_id'] }}"
      when: type == 'aws'

    - name: Start instance
      debug:
        msg: "not yet implemented"
      when: type == 'azure'

    - name: Wating for Jumphost and Kubernetes Master to Come up
      pause:
        minutes: 1

- hosts: tag_role_k8sworker, tag_role_linuxep, tag_role_windowsep, tag_role_openshift, tag_role_dsm, tag_rols_dsmdb
  gather_facts: false
  vars:
  tasks:
    - name: Include vars
      include: site_vars.yml

    - name: Start instance
      include_role:
        name: environment-gcp
      vars:
        operation: start_instance
        instance_name: "{{ hostvars[inventory_hostname]['name'] }}"
      when: type == 'gcp'

    - name: Start instance
      include_role:
        name: environment-aws
      vars:
        operation: start_instance
        instance_id: "{{ hostvars[inventory_hostname]['ec2_id'] }}"
      when: type == 'aws'

    - name: Start instance
      debug:
        msg: "not yet implemented"
      # include_role:
      #   name: environment-azure
      # vars:
      #   operation: stop_instance
      when: type == 'azure'

- hosts: localhost
  gather_facts: false
  tasks:
    - name: Include vars
      include: site_vars.yml
      
    - name: Create Jumphost SSH Command
      delegate_to: 127.0.0.1
      copy:
        dest: "./ssh_jumphost"
        content: |
          ssh ubuntu@{{ jumphost_ip }}
        force: yes
        owner: ansible
        mode: '0700'

    - name: Create Master SSH Command
      delegate_to: 127.0.0.1
      copy:
        dest: "./ssh_master"
        content: |
          ssh -o ProxyCommand="ssh -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -W %h:%p {{ jumphost_ip }}" ubuntu@{{ k8smaster_ip }} $1
        force: yes
        owner: ansible
        mode: '0700'

    - name: Create Copy Master Command
      delegate_to: 127.0.0.1
      copy:
        dest: "./copy_master"
        content: |
          scp -o ProxyCommand="ssh -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -W %h:%p {{ jumphost_ip }}" $1 ubuntu@{{ k8smaster_ip }}:~/$1
        force: yes
        owner: ansible
        mode: '0700'

    - name: Create Fetch Master Command
      delegate_to: 127.0.0.1
      copy:
        dest: "./fetch_master"
        content: |
          scp -o ProxyCommand="ssh -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -W %h:%p {{ jumphost_ip }}" ubuntu@{{ k8smaster_ip }}:~/$1 $1
        force: yes
        owner: ansible
        mode: '0700'

    - name: Create Master Watch Pods Command
      delegate_to: 127.0.0.1
      copy:
        dest: "./ssh_master_pods"
        content: |
          watch './ssh_master "kubectl get pods --all-namespaces"'
        force: yes
        owner: ansible
        mode: '0700'

    - name: Create Master Watch Services Command
      delegate_to: 127.0.0.1
      copy:
        dest: "./ssh_master_services"
        content: |
          watch './ssh_master "kubectl get services --all-namespaces"'
        force: yes
        owner: ansible
        mode: '0700'

    - name: Create Master Watch Deployments Command
      delegate_to: 127.0.0.1
      copy:
        dest: "./ssh_master_deployments"
        content: |
          watch './ssh_master "kubectl get deployments --all-namespaces"'
        force: yes
        owner: ansible
        mode: '0700'

# - hosts: tag_role_jumphost, tag_role_k8sworker, tag_role_k8smaster, tag_role_linuxep
#   gather_facts: false
#   become: yes
#
#   tasks:
#     - name: Include vars
#       include: site_vars.yml
#
#     - name: Wating for instances to Come up
#       pause:
#         minutes: 5
#
#     - name: AWS
#       block:
#         - name: Query Instance State
#           set_fact:
#             ec2_state: "{{ hostvars[inventory_hostname]['ec2_state'] }}"
#
#         - name: Cancel Shutdown on Linux Instance
#           at:
#             command: shutdown -h now
#             state: absent
#           when:
#             - ec2_state == "running"
#
#         - name: Send Shutdown Command to Linux Instance
#           at:
#             command: shutdown -h now
#             count: "{{ instance_shutdown_delay }}"
#             units: minutes
#           when:
#             - ec2_state == "running"
#       when: type == "aws"
